function toggleForm(formId) {
    const form = document.getElementById(formId);
    form.classList.toggle('hidden');
    if (!form.classList.contains('hidden')) {
        form.querySelector('input').focus();
    }
}

// Handles the "Add" buttons to toggle form visibility
document.getElementById('add-task-btn').addEventListener('click', function() {
    document.getElementById('checklist-form').classList.toggle('hidden');
});

document.getElementById('add-note-btn').addEventListener('click', function() {
    document.getElementById('notes-form').classList.toggle('hidden');
});

document.getElementById('add-file-btn').addEventListener('click', function() {
    document.getElementById('upload-form').classList.toggle('hidden');
});

document.getElementById('add-reminder-btn').addEventListener('click', function() {
    document.getElementById('reminder-form').classList.toggle('hidden');
});

// Corrected upload form event listener
document.getElementById('upload-form').addEventListener('submit', async function(event) {
    event.preventDefault();

    // Check if a file was selected.
    if (fileInput.files.length === 0) {
        alert('Please select a file to upload.');
        return;
    }

    const formData = new FormData();
    // Manually append the selected file to the FormData object
    formData.append('file', fileInput.files[0]);

    try {
        const response = await fetch(this.action, {
            method: 'POST',
            body: formData,
        });

        if (response.ok) {
            const result = await response.text();
            console.log(result);
            alert('File uploaded successfully!');
            window.location.reload();
        } else {
            const errorText = await response.text();
            console.error('Server responded with an error:', response.status, errorText);
            alert('Upload failed: ' + errorText);
        }
    } catch (error) {
        console.error('An unexpected error occurred:', error);
        alert('An unexpected error occurred. Please try again.');
    }
});

// Handles the "Delete" buttons for all sections
document.querySelectorAll('.delete-btn').forEach(button => {
    button.addEventListener('click', (event) => {
        if (!confirm('Are you sure you want to delete this item?')) {
            event.preventDefault(); // Stop the form from submitting
        }
    });
});

// File upload drag and drop
const uploadArea = document.querySelector('.upload-area');
const fileInput = document.getElementById('file-input');

uploadArea.addEventListener('dragover', (e) => {
    e.preventDefault();
    uploadArea.style.borderColor = '#ffd700';
});

uploadArea.addEventListener('dragleave', () => {
    uploadArea.style.borderColor = 'rgba(255, 255, 255, 0.3)';
});

uploadArea.addEventListener('drop', (e) => {
    e.preventDefault();
    uploadArea.style.borderColor = 'rgba(255, 255, 255, 0.3)';

    const files = e.dataTransfer.files;
    if (files.length > 0) {
        fileInput.files = files;
        uploadArea.querySelector('.upload-label').innerHTML =
            `<i class="fas fa-file" style="font-size: 2rem; margin-bottom: 1rem; display: block;"></i>
             Selected: ${files[0].name}`;
    }
});

fileInput.addEventListener('change', (e) => {
    if (e.target.files.length > 0) {
        uploadArea.querySelector('.upload-label').innerHTML =
            `<i class="fas fa-file" style="font-size: 2rem; margin-bottom: 1rem; display: block;"></i>
             Selected: ${e.target.files[0].name}`;
    }
});